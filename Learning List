# Your code below: 
order_list = ["Celery", "Orange Juice", "Orange", "Flatbread"]
print(order_list)
order_list.remove("Flatbread")
# Need to print it again to show the new list
print(order_list)
new_store_order_list = ["Orange", "Apple", "Mango", "Broccoli", "Mango"]
print(new_store_order_list)
# This removes the first occurrence of the word "mango"
new_store_order_list.remove("Mango")
print(new_store_order_list)
# Thsis adds to the appointed list
new_store_order_list.append("Onions")
print(new_store_order_list)
# Adding in two-dimensional list
heights = [["Jenny", 61], ["Alexus", 70], ["Sam", 67], ["Grace", 64]]
heights.append(["Vik", 68])
print(heights)
ages = [["Aaron", 15], ["Dhruti", 16]]
# want to have a way to store all of our classroom test score data.
class_name_test = [["Jenny", 90], ["Alexus", 85.5], ["Sam", 83], ["Ellie", 101.5]]
print(class_name_test)
sams_score = class_name_test[2][1]
print(sams_score)
ellies_score = class_name_test[-1][-1]
print( ellies_score)
# more list work
# create a two-dimensional list called incoming_class to represent the data. Each sublist in incoming_class should contain the name, nationality, and grade for a single student.
incoming_class = [["Kenny", "American", 9], ["Tanya", "Ukrainian", 9], ["Madison", "Indian", 7]]
print(incoming_class)
# change Tanya's grade to 8th
incoming_class[2][2] = 8
print(incoming_class)
incoming_class[-3][-3] = "Ken"
print(incoming_class)

#  entering customer data for her web store business. We’re going to help her organize her data 
first_names = ["Ainsley", "Ben", "Chani", "Depak"]
preferred_size = ["Small", "Large", "Medium"]
preferred_size.append("Medium")
print(preferred_size)
# Maria is having a hard time visualizing which customer is associated with each size. Let’s restructure our two lists into a two-dimensional list to help Maria.
# being reflected using a boolean value (True for expedited, False for regular)
customer_data = [["Ainsley", "Small", True], ["Ben", "Large", False], ["Chani", "Medium", True], ["Depak", "Medium", False]]
print(customer_data)
#"Chani" reached out to Maria. She requested to switch to regular shipping to save some money.
customer_data[-2][-1] = False
print(customer_data)
# "Ben" reached out to Maria asking to remove his shipping option (the True or False value) because he is unsure what type he wants.
customer_data[1].remove(False)
print(customer_data)
#  One last thing, Maria received new customers, "Amit" and "Karim"
customer_data_final = customer_data + [["Amit", "Large", True], ["Karim", "X-Large", False]]
print(customer_data_final)

# Practice .insert()
front_display_list = ["Mango", "Filet Mignon", "Chocolate Milk"]
# I will place pineapple at the front of the list, which is why the number will be zero
front_display_list.insert(0, "Pineapple")
print(front_display_list)

inventory = ["twin bed", "twin bed", "headboard", "queen bed", "king bed", "dresser", "dresser", "table", "table", "nightstand", "nightstand", "king bed", "king bed", "twin bed", "twin bed", "sheets", "sheets", "pillow", "pillow"]
# First, how many items are in the warehouse?
inventory_len = len(inventory)
# Select the first element in inventory. Save it to a variable called first.
first = inventory[0]
# Select the last element from inventory. Save it to a variable called last.
last = inventory[-1]
# Select items from the inventory starting at index 2 and up to, but not including, index 6.Save your answer to a variable called inventory_2_6.
inventory_2_6 = inventory[2:6]
# Select the first 3 items of inventory. Save it to a variable called first_3.
first_3 = inventory[:3]
# How many 'twin bed's are in inventory? Save your answer to a variable called twin_beds.
twin_beds = inventory.count('twin bed')
# Remove the 5th element in the inventory. Save the value to a variable called removed_item.
removed_item = inventory.pop(4)
# There was a new item added to our inventory called "19th Century Bed Frame".
inventory.insert(10, "19th Century Bed Frame")
# Sort inventory using the .sort() method or the sorted() function.
inventory = sorted(inventory)
print(inventory)
